"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/challenges/challenge-1",{

/***/ "./components/CodeEditor.jsx":
/*!***********************************!*\
  !*** ./components/CodeEditor.jsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Editor: () => (/* binding */ Editor)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _uiw_react_codemirror__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @uiw/react-codemirror */ \"./node_modules/@uiw/react-codemirror/esm/index.js\");\n/* harmony import */ var _replit_codemirror_lang_solidity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @replit/codemirror-lang-solidity */ \"./node_modules/@replit/codemirror-lang-solidity/dist/index.js\");\n\nvar _s = $RefreshSig$();\n\n\n\nfunction Editor(param) {\n    let { initialCode } = param;\n    _s();\n    const [code, setCode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialCode);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"code-editor-container\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_uiw_react_codemirror__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n            value: code,\n            height: \"400px\",\n            theme: \"dark\",\n            extensions: [\n                (0,_replit_codemirror_lang_solidity__WEBPACK_IMPORTED_MODULE_3__.solidity)()\n            ],\n            onChange: (newCode)=>setCode(newCode)\n        }, void 0, false, {\n            fileName: \"/Users/jordansolomon/Desktop/Web3/Development/Minds3t-Game/front-end/components/CodeEditor.jsx\",\n            lineNumber: 10,\n            columnNumber: 13\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/jordansolomon/Desktop/Web3/Development/Minds3t-Game/front-end/components/CodeEditor.jsx\",\n        lineNumber: 9,\n        columnNumber: 9\n    }, this);\n}\n_s(Editor, \"ZFV6bPVogXq7gKF6tM763Q/dBFY=\");\n_c = Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0NvZGVFZGl0b3IuanN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFpQztBQUNjO0FBQ1U7QUFFbEQsU0FBU0csT0FBTyxLQUFlO1FBQWYsRUFBRUMsV0FBVyxFQUFFLEdBQWY7O0lBQ25CLE1BQU0sQ0FBQ0MsTUFBTUMsUUFBUSxHQUFHTiwrQ0FBUUEsQ0FBQ0k7SUFFakMscUJBQ0ksOERBQUNHO1FBQUlDLFdBQVU7a0JBQ1gsNEVBQUNQLDZEQUFVQTtZQUNQUSxPQUFPSjtZQUNQSyxRQUFPO1lBQ1BDLE9BQU07WUFDTkMsWUFBWTtnQkFBQ1YsMEVBQVFBO2FBQUc7WUFDeEJXLFVBQVUsQ0FBQ0MsVUFBWVIsUUFBUVE7Ozs7Ozs7Ozs7O0FBSS9DO0dBZGdCWDtLQUFBQSIsInNvdXJjZXMiOlsiL1VzZXJzL2pvcmRhbnNvbG9tb24vRGVza3RvcC9XZWIzL0RldmVsb3BtZW50L01pbmRzM3QtR2FtZS9mcm9udC1lbmQvY29tcG9uZW50cy9Db2RlRWRpdG9yLmpzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IENvZGVNaXJyb3IgZnJvbSBcIkB1aXcvcmVhY3QtY29kZW1pcnJvclwiO1xuaW1wb3J0IHtzb2xpZGl0eX0gZnJvbSBcIkByZXBsaXQvY29kZW1pcnJvci1sYW5nLXNvbGlkaXR5XCJcblxuZXhwb3J0IGZ1bmN0aW9uIEVkaXRvcih7IGluaXRpYWxDb2RlIH0pIHtcbiAgICBjb25zdCBbY29kZSwgc2V0Q29kZV0gPSB1c2VTdGF0ZShpbml0aWFsQ29kZSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvZGUtZWRpdG9yLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPENvZGVNaXJyb3JcbiAgICAgICAgICAgICAgICB2YWx1ZT17Y29kZX1cbiAgICAgICAgICAgICAgICBoZWlnaHQ9XCI0MDBweFwiXG4gICAgICAgICAgICAgICAgdGhlbWU9XCJkYXJrXCJcbiAgICAgICAgICAgICAgICBleHRlbnNpb25zPXtbc29saWRpdHkoKV19XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhuZXdDb2RlKSA9PiBzZXRDb2RlKG5ld0NvZGUpfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn0iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJDb2RlTWlycm9yIiwic29saWRpdHkiLCJFZGl0b3IiLCJpbml0aWFsQ29kZSIsImNvZGUiLCJzZXRDb2RlIiwiZGl2IiwiY2xhc3NOYW1lIiwidmFsdWUiLCJoZWlnaHQiLCJ0aGVtZSIsImV4dGVuc2lvbnMiLCJvbkNoYW5nZSIsIm5ld0NvZGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/CodeEditor.jsx\n"));

/***/ }),

/***/ "./node_modules/@replit/codemirror-lang-solidity/dist/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@replit/codemirror-lang-solidity/dist/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parser: () => (/* binding */ parser),\n/* harmony export */   solidity: () => (/* binding */ solidity)\n/* harmony export */ });\n/* harmony import */ var _codemirror_language__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @codemirror/language */ \"./node_modules/@codemirror/language/dist/index.js\");\n/* harmony import */ var _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lezer/highlight */ \"./node_modules/@lezer/highlight/dist/index.js\");\n\n\n\n/**\n* Wrapper around the legacy CM5 Solidity language mode\n* See: https://github.com/alincode/codemirror-solidity\n*/\nconst keywords = {\n    pragma: true,\n    solidity: true,\n    import: true,\n    as: true,\n    from: true,\n    contract: true,\n    constructor: true,\n    is: true,\n    function: true,\n    modifier: true,\n    // modifiers\n    pure: true,\n    view: true,\n    payable: true,\n    constant: true,\n    anonymous: true,\n    indexed: true,\n    returns: true,\n    return: true,\n    event: true,\n    struct: true,\n    mapping: true,\n    interface: true,\n    using: true,\n    library: true,\n    storage: true,\n    memory: true,\n    calldata: true,\n    public: true,\n    private: true,\n    external: true,\n    internal: true,\n    emit: true,\n    assembly: true,\n    abstract: true,\n    after: true,\n    catch: true,\n    final: true,\n    in: true,\n    inline: true,\n    let: true,\n    match: true,\n    null: true,\n    of: true,\n    relocatable: true,\n    static: true,\n    try: true,\n    typeof: true,\n    var: true,\n};\nconst keywordsSpecial = {\n    pragma: true,\n    returns: true,\n    address: true,\n    contract: true,\n    function: true,\n    struct: true,\n};\nconst keywordsEtherUnit = {\n    wei: true,\n    szabo: true,\n    finney: true,\n    ether: true,\n};\nconst keywordsTimeUnit = {\n    seconds: true,\n    minutes: true,\n    hours: true,\n    days: true,\n    weeks: true,\n};\nconst keywordsBlockAndTransactionProperties = {\n    block: ['coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp'],\n    msg: ['data', 'sender', 'sig', 'value'],\n    tx: ['gasprice', 'origin'],\n};\nconst keywordsMoreBlockAndTransactionProperties = {\n    now: true,\n    gasleft: true,\n    blockhash: true,\n};\nconst keywordsErrorHandling = {\n    assert: true,\n    require: true,\n    revert: true,\n    throw: true,\n};\nconst keywordsMathematicalAndCryptographicFuctions = {\n    addmod: true,\n    mulmod: true,\n    keccak256: true,\n    sha256: true,\n    ripemd160: true,\n    ecrecover: true,\n};\nconst keywordsContractRelated = {\n    this: true,\n    selfdestruct: true,\n    super: true,\n};\nconst keywordsTypeInformation = { type: true };\nconst keywordsContractList = {};\nconst keywordsControlStructures = {\n    if: true,\n    else: true,\n    while: true,\n    do: true,\n    for: true,\n    break: true,\n    continue: true,\n    switch: true,\n    case: true,\n    default: true,\n};\nconst keywordsValueTypes = {\n    bool: true,\n    byte: true,\n    string: true,\n    enum: true,\n    address: true,\n};\nconst keywordsV0505NewReserve = {\n    alias: true,\n    apply: true,\n    auto: true,\n    copyof: true,\n    define: true,\n    immutable: true,\n    implements: true,\n    macro: true,\n    mutable: true,\n    override: true,\n    partial: true,\n    promise: true,\n    reference: true,\n    sealed: true,\n    sizeof: true,\n    supports: true,\n    typedef: true,\n    unchecked: true,\n};\nconst keywordsAbiEncodeDecodeFunctions = {\n    abi: [\n        'decode',\n        'encodePacked',\n        'encodeWithSelector',\n        'encodeWithSignature',\n        'encode',\n    ],\n};\nconst keywordsMembersOfAddressType = [\n    'transfer',\n    'send',\n    'balance',\n    'call',\n    'delegatecall',\n    'staticcall',\n];\nconst natSpecTags = ['title', 'author', 'notice', 'dev', 'param', 'return'];\nconst atoms = {\n    delete: true,\n    new: true,\n    true: true,\n    false: true,\n};\nconst isOperatorChar = /[+\\-*&^%:=<>!|/~]/;\nconst isNegativeChar = /[-]/;\nlet curPunc;\nfunction tokenBase(stream, state) {\n    let ch = stream.next();\n    if (ch === '\"' || ch === \"'\" || ch === '`') {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n    }\n    if (isVersion(stream, state)) {\n        return 'version';\n    }\n    if (ch === '.' &&\n        keywordsMembersOfAddressType.some(function (item) {\n            return stream.match(`${item}`);\n        })) {\n        return 'addressFunction';\n    }\n    if (typeof ch === 'string' && isNumber(ch, stream)) {\n        return 'number';\n    }\n    if (typeof ch === 'string' && /[[\\]{}(),;:.]/.test(ch)) {\n        return updateGarmmer(ch, state);\n    }\n    if (ch === '/') {\n        if (stream.eat('*')) {\n            state.tokenize = tokenComment;\n            return tokenComment(stream, state);\n        }\n        if (stream.match(/\\/{2}/)) {\n            ch = stream.next();\n            while (ch) {\n                if (ch === '@') {\n                    stream.backUp(1);\n                    state.grammar = 'doc';\n                    break;\n                }\n                ch = stream.next();\n            }\n            return 'doc';\n        }\n        if (stream.eat('/')) {\n            stream.skipToEnd();\n            return 'comment';\n        }\n    }\n    if (typeof ch === 'string' && isNegativeChar.test(ch)) {\n        const peeked = stream.peek();\n        if (typeof peeked === 'string' && isNumber(peeked, stream)) {\n            return 'number';\n        }\n        return 'operator';\n    }\n    if (typeof ch === 'string' && isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return 'operator';\n    }\n    stream.eatWhile(/[\\w$_\\xa1-\\uffff]/);\n    const cur = stream.current();\n    if (state.grammar === 'doc') {\n        if (natSpecTags.some(function (item) {\n            return cur === `@${item}`;\n        })) {\n            return 'docReserve';\n        }\n        return 'doc';\n    }\n    if (cur === 'solidity' && state.lastToken === 'pragma') {\n        state.lastToken = state.lastToken + ' ' + cur;\n    }\n    if (Object.prototype.propertyIsEnumerable.call(keywords, cur)) {\n        if (cur === 'case' || cur === 'default') {\n            curPunc = 'case';\n        }\n        if (Object.prototype.propertyIsEnumerable.call(keywordsSpecial, cur)) {\n            state.lastToken = cur;\n        }\n        //if (cur === 'function' && state.para === 'parameterMode')\n        return 'keyword';\n    }\n    if (Object.prototype.propertyIsEnumerable.call(keywordsEtherUnit, cur)) {\n        return 'etherUnit';\n    }\n    if (Object.prototype.propertyIsEnumerable.call(keywordsContractRelated, cur)) {\n        return 'contractRelated';\n    }\n    if (Object.prototype.propertyIsEnumerable.call(keywordsControlStructures, cur) ||\n        Object.prototype.propertyIsEnumerable.call(keywordsTypeInformation, cur) ||\n        Object.prototype.propertyIsEnumerable.call(keywordsV0505NewReserve, cur)) {\n        return 'keyword';\n    }\n    if (Object.prototype.propertyIsEnumerable.call(keywordsValueTypes, cur) ||\n        Object.prototype.propertyIsEnumerable.call(keywordsTimeUnit, cur) ||\n        isValidInteger(cur) ||\n        isValidBytes(cur) ||\n        isValidFixed(cur)) {\n        state.lastToken += 'variable';\n        return 'keyword';\n    }\n    if (Object.prototype.propertyIsEnumerable.call(atoms, cur)) {\n        return 'atom';\n    }\n    if (Object.prototype.propertyIsEnumerable.call(keywordsErrorHandling, cur)) {\n        return 'errorHandling';\n    }\n    if (Object.prototype.propertyIsEnumerable.call(keywordsMathematicalAndCryptographicFuctions, cur)) {\n        return 'mathematicalAndCryptographic';\n    }\n    if (Object.prototype.propertyIsEnumerable.call(keywordsMoreBlockAndTransactionProperties, cur) ||\n        (Object.prototype.propertyIsEnumerable.call(keywordsBlockAndTransactionProperties, cur) &&\n            keywordsBlockAndTransactionProperties[cur].some(function (item) {\n                return stream.match(`.${item}`);\n            }))) {\n        return 'variable-2';\n    }\n    if (cur === 'abi' &&\n        keywordsAbiEncodeDecodeFunctions[cur].some(function (item) {\n            return stream.match(`.${item}`);\n        })) {\n        return 'abi';\n    }\n    const style = updateHexLiterals(cur, stream);\n    if (style != null) {\n        return style;\n    }\n    if ((state.lastToken === 'functionName(' || state.lastToken === 'returns(') &&\n        Object.prototype.propertyIsEnumerable.call(keywordsContractList, cur)) {\n        state.lastToken += 'variable';\n        return 'variable';\n    }\n    if (state.lastToken === 'function') {\n        state.lastToken = 'functionName';\n        if (state.para == null) {\n            state.grammar = 'function';\n            state.para = '';\n        }\n        //state.parasMode = isNaN(state.parasMode) ? 1 : state.functionLayerCount++;\n        state.para += 'functionName';\n        return 'functionName';\n    }\n    if (state.lastToken === 'functionName(variable') {\n        state.lastToken = 'functionName(';\n        return 'parameterValue';\n    }\n    if (state.lastToken === 'returns(variable') {\n        state.lastToken = 'returns(';\n        return 'parameterValue';\n    }\n    if (state.lastToken === 'address' && cur === 'payable') {\n        state.lastToken = 'address payable';\n    }\n    if (state.lastToken === 'contract' || state.lastToken === 'struct') {\n        keywordsContractList[cur] = true;\n        state.lastToken = null;\n    }\n    if (state.grammar === 'function') {\n        return 'parameterValue';\n    }\n    return 'variable';\n}\nfunction tokenString(quote) {\n    return function (stream, state) {\n        let escaped = false;\n        let next;\n        let end = false;\n        next = stream.next();\n        while (next != null) {\n            if (next === quote && !escaped) {\n                end = true;\n                break;\n            }\n            escaped = !escaped && quote !== '`' && next === '\\\\';\n            next = stream.next();\n        }\n        if (end || !(escaped || quote === '`')) {\n            state.tokenize = tokenBase;\n        }\n        return 'string';\n    };\n}\nfunction tokenComment(stream, state) {\n    let maybeEnd = false;\n    let ch = stream.next();\n    while (ch) {\n        if (ch === '/' && maybeEnd) {\n            state.tokenize = tokenBase;\n            break;\n        }\n        maybeEnd = ch === '*';\n        ch = stream.next();\n    }\n    return 'comment';\n}\nfunction isVersion(stream, state) {\n    if (state.lastToken === 'pragma solidity') {\n        state.lastToken = null;\n        return (!state.startOfLine &&\n            (stream.match(/[\\^{0}][0-9.]+/) ||\n                stream.match(/[>=]+?[\\s]*[0-9.]+[\\s]*[<]?[\\s]*[0-9.]+/)));\n    }\n}\nfunction isNumber(ch, stream) {\n    if (/[\\d.]/.test(ch)) {\n        if (ch === '.') {\n            stream.match(/^[0-9]+([eE][-+]?[0-9]+)?/);\n        }\n        else if (ch === '0') {\n            if (!stream.match(/^[xX][0-9a-fA-F]+/)) {\n                stream.match(/^0[0-7]+/);\n            }\n        }\n        else {\n            stream.match(/^[0-9]*\\.?[0-9]*([eE][-+]?[0-9]+)?/);\n        }\n        return true;\n    }\n}\nfunction isValidInteger(token) {\n    if (token.match(/^[u]?int/)) {\n        if (token.indexOf('t') + 1 === token.length) {\n            return true;\n        }\n        const numberPart = Number(token.substr(token.indexOf('t') + 1, token.length));\n        return numberPart % 8 === 0 && numberPart <= 256;\n    }\n}\nfunction isValidBytes(token) {\n    if (token.match(/^bytes/)) {\n        if (token.indexOf('s') + 1 === token.length) {\n            return true;\n        }\n        const bytesPart = token.substr(token.indexOf('s') + 1, token.length);\n        return Number(bytesPart) <= 32;\n    }\n}\nfunction isValidFixed(token) {\n    if (token.match(/^[u]?fixed([0-9]+x[0-9]+)?/)) {\n        if (token.indexOf('d') + 1 === token.length) {\n            return true;\n        }\n        const numberPart = token\n            .substr(token.indexOf('d') + 1, token.length)\n            .split('x')\n            .map(Number);\n        return (numberPart[0] % 8 === 0 && numberPart[0] <= 256 && numberPart[1] <= 80);\n    }\n}\nfunction updateHexLiterals(token, stream) {\n    if (token.match(/^hex/) && stream.peek() === '\"') {\n        let maybeEnd = false;\n        let ch;\n        let hexValue = '';\n        let stringAfterHex = '';\n        ch = stream.next();\n        while (ch) {\n            stringAfterHex += ch;\n            if (ch === '\"' && maybeEnd) {\n                hexValue = stringAfterHex.substring(1, stringAfterHex.length - 1);\n                if (hexValue.match(/^[0-9a-fA-F]+$/)) {\n                    return 'number';\n                }\n                stream.backUp(stringAfterHex.length);\n                break;\n            }\n            maybeEnd = maybeEnd || ch === '\"';\n            ch = stream.next();\n        }\n    }\n}\nfunction updateGarmmer(ch, state) {\n    if (ch === ',' && state.para === 'functionName(variable') {\n        state.para = 'functionName(';\n    }\n    if (state.para != null && state.para.startsWith('functionName')) {\n        if (ch === ')') {\n            if (state.para.endsWith('(')) {\n                state.para = state.para.substr(0, state.para.length - 1);\n                if (state.para === 'functionName') {\n                    state.grammar = '';\n                }\n            }\n        }\n        else if (ch === '(') {\n            state.para += ch;\n        }\n    }\n    if (ch === '(' && state.lastToken === 'functionName') {\n        state.lastToken += ch;\n    }\n    else if (ch === ')' && state.lastToken === 'functionName(') {\n        state.lastToken = null;\n    }\n    else if (ch === '(' && state.lastToken === 'returns') {\n        state.lastToken += ch;\n    }\n    else if (ch === ')' &&\n        (state.lastToken === 'returns(' || state.lastToken === 'returns(variable')) {\n        state.lastToken = null;\n    }\n    if (ch === '(' && state.lastToken === 'address') {\n        state.lastToken += ch;\n    }\n    curPunc = ch;\n    return null;\n}\nclass Context {\n    constructor(indented, column, type, align, prev) {\n        this.indented = indented;\n        this.column = column;\n        this.type = type;\n        this.align = align;\n        this.prev = prev;\n    }\n}\nfunction pushContext(state, col, type) {\n    state.context = new Context(state.indented, col, type, null, state.context);\n    return state.context;\n}\nfunction popContext(state) {\n    if (!state.context.prev) {\n        return;\n    }\n    const t = state.context.type;\n    if (t === ')' || t === ']' || t === '}') {\n        state.indented = state.context.indented;\n    }\n    return (state.context = state.context.prev);\n}\nconst parser = {\n    startState(indentUnit) {\n        return {\n            tokenize: null,\n            context: new Context(0 - indentUnit, 0, 'top', false, null),\n            indented: 0,\n            startOfLine: true,\n            grammar: null,\n            lastToken: null,\n            para: null,\n        };\n    },\n    token(stream, state) {\n        const ctx = state.context;\n        if (stream.sol()) {\n            if (ctx.align == null) {\n                ctx.align = false;\n            }\n            state.indented = stream.indentation();\n            state.startOfLine = true;\n            if (ctx.type === 'case') {\n                ctx.type = '}';\n            }\n            if (state.grammar === 'doc') {\n                state.grammar = null;\n            }\n        }\n        if (stream.eatSpace()) {\n            return null;\n        }\n        curPunc = null;\n        const style = (state.tokenize || tokenBase)(stream, state);\n        if (style === 'comment') {\n            return style;\n        }\n        if (ctx.align == null) {\n            ctx.align = true;\n        }\n        if (curPunc === '{') {\n            pushContext(state, stream.column(), '}');\n        }\n        else if (curPunc === '[') {\n            pushContext(state, stream.column(), ']');\n        }\n        else if (curPunc === '(') {\n            pushContext(state, stream.column(), ')');\n        }\n        else if (curPunc === 'case') {\n            ctx.type = 'case';\n        }\n        else if (curPunc === '}' && ctx.type === '}') {\n            popContext(state);\n        }\n        else if (curPunc === ctx.type) {\n            popContext(state);\n        }\n        state.startOfLine = false;\n        return style;\n    },\n    indent(state, textAfter, indentContext) {\n        if (state.tokenize !== tokenBase && state.tokenize != null) {\n            return null;\n        }\n        const ctx = state.context;\n        const firstChar = textAfter && textAfter.charAt(0);\n        if (ctx.type === 'case' && /^(?:case|default)\\b/.test(textAfter)) {\n            state.context.type = '}';\n            return ctx.indented;\n        }\n        const closing = firstChar === ctx.type;\n        if (ctx.align) {\n            return ctx.column + (closing ? 0 : 1);\n        }\n        return ctx.indented + (closing ? 0 : indentContext.unit);\n    },\n    // @ts-ignore not specified in new stream parser, but maybe does something\n    electricChars: '{}):',\n    closeBrackets: '()[]{}\\'\\'\"\"``',\n    fold: 'brace',\n    blockCommentStart: '/*',\n    blockCommentEnd: '*/',\n    lineComment: '//',\n    tokenTable: {\n        functionName: /*@__PURE__*/_lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.Tag.define(),\n        parameterValue: /*@__PURE__*/_lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.Tag.define(),\n        addressFunction: /*@__PURE__*/_lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.Tag.define(),\n        errorHandling: /*@__PURE__*/_lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.Tag.define(),\n        contractRelated: /*@__PURE__*/_lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.Tag.define(),\n        version: /*@__PURE__*/_lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.Tag.define(),\n        etherUnit: /*@__PURE__*/_lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.Tag.define(),\n        doc: /*@__PURE__*/_lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.Tag.define(),\n        mathematicalAndCryptographic: /*@__PURE__*/_lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.Tag.define(),\n        abi: /*@__PURE__*/_lezer_highlight__WEBPACK_IMPORTED_MODULE_0__.Tag.define(),\n    }\n};\nconst solidity = /*@__PURE__*/new _codemirror_language__WEBPACK_IMPORTED_MODULE_1__.LanguageSupport(/*@__PURE__*/_codemirror_language__WEBPACK_IMPORTED_MODULE_1__.StreamLanguage.define(parser));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@replit/codemirror-lang-solidity/dist/index.js\n"));

/***/ })

});